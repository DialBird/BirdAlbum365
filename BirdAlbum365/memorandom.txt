

メインページを作ろう

①canvasを全画面表示
    でバック用のボタンを頭に設置（planeを出すボタン）
    戻るボタン
    headerを作る
    sassファイルの整頓
    ページへ飛ぶをtestに
    imgをsrcではなくfontと同じ列に　svg
    ②歯車の配置
    ③birdNavの作成
    歯車クリック季節変更
    鳥の呼び出し同期
    最初は春モードで
    スプライト
    背景作成
    日本語名
    最初から出す
    たいとるのminwidth
    スマホありきのコンテンツにする
    スマホは中心から鳥を観察する役割、PCは外側から俯瞰し、アニメーションやインタラクションを楽しむものにする
    サウンドの作成
    流す方法
    音声のオンオフのスイッチ
    
    完了


歯車エフェクト

歯車のアニメーション
jsフォルダ変更（cssアニメーションとthree.jsアニメーションを書く場所を決定しておく）

鳥の季節をクリックで表示
スマホの画面上にスイッチ
page1の上二つのデザイン変更
タイトルサイズ

写真拡大
したからポップアップ


・PCでできること
    季節の変更（アニメーション）
    鳥の説明を見れる（アニメーションなし）
    鳥の声をきかせる
・すまほでできること
    鳥の選択
    アルバムの動きをつける（スライドで回転）
    シェイクで鳥が暴れる（シャッフルする）
・使用編んこう
    鳥の選択でいちいち消えない、端っこにデータがあらわれる
    アニメーションは普段の時と、季節が変わる時、シャッフルした時、スライドして回転させた時
    
音がでない設定の時は季節が変わっても



＜鳥の画像を追加、変更した時の処理パターン＞
    画像をsrc内のbirdImages > birdsOriginフォルダの中に追加する(適切なジャンルに)
    npm run resizeBirdでサイズを変更
    gulpfile内の、gulp createManifestで、endイベントハンドラの中身を選んでターミナル上に３種類のマニフェストを出力する
        loadManifestはpage1,page2のimageLoad.jsにペーストする
        birdNamesは、page1用にはsrc > page1 > js内のnamespaceにペーストしsummer.winterなどのジャンルを全てまとめて一つの配列にする、page2にはapp.jsのroutes内のnamespace.jsにペーストする（スマホとPCで共有するため）
        databaseManifestはroutesのdatabase.js内にペーストし、名前が違っているものを直しておく
    最後にjsをコンパイルするのを忘れない
    

＜プリロードするもの、したあとの扱い方＞
    audio: 音声のマップを記したJSONファイルをプリロードするだけでいい。音声ファイルそのものを読み込む記述は書かなくていい（JSONないでやってくれる）
    image: スプライトと、その中の位置を示したJSONファイルをプリロードし、必要に応じてcanvasでトリミング、ペースト
    
    鳥の名前とその鳥の季節:　
        appJSが持っている。app.jsで季節に応じた鳥の名前をランダムに出してくれる。
        クライアント側は、それを受け取って画像を出したり音声を読み取ったりするだけでいい。
    
    